{"version":3,"sources":["webpack:///./apiService.js"],"names":["loadBtn","document","querySelector","mainUl","API_KEY","URL","searchParams","search","page","perPage","form","input","itemGet","item","webformatURL","likes","views","comments","downloads","addEventListener","e","preventDefault","mainUrl","inputValue","value","fetch","then","response","ok","Error","json","result","cards","hits","map","join","innerHTML","catch","err","console","log","newImg","insertAdjacentHTML","lastVisiblePhoto","scrollValue","offsetTop","clientHeight","window","scrollTo","behavior","top","classList","remove"],"mappings":"mNAIA,IAAMA,EAAUC,SAASC,cAAc,aACjCC,EAASF,SAASC,cAAc,YAChCE,EAAU,qCACVC,EAAM,sEAENC,EAAe,CACnBC,OAAQ,GACRC,KAAM,EACNC,QAAS,IAsDX,IAAMC,EAAOT,SAASC,cAAc,gBAE9BS,GADWD,EAAKR,cAAc,mBACtBD,SAASC,cAAc,mBASrC,SAASU,EAAQC,GA0Bf,MAxBe,kEAD6CA,EAApDC,aACI,yHADgDD,EAAtCE,MACV,iGADgDF,EAA/BG,MACjB,8FADgDH,EAAxBI,SACxB,qGADgDJ,EAAdK,UAClC,sCAVdR,EAAKS,iBAAiB,UAAU,SAAUC,GACxCA,EAAEC,iBACF,IAvDeR,EACTS,EAsDAC,EAAaZ,EAAMa,MAtDnBF,EAAU,GAAGjB,GADJQ,EAwDRU,GAvDM,SAAyBjB,EAAaE,KAAtC,oBAA8DJ,EACzDqB,MAAMH,GAEpBI,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,4BAEhB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GACJ,IAAMC,EAAQD,EAAOE,KAAKC,IAAItB,GAASuB,KAAK,IAC5ChC,EAAOiC,UAAYJ,KAEpBK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAE5BtC,EAAQmB,iBAAiB,SAAS,SAAUC,GAC5Cd,EAAaE,MAAQ,EACnBY,EAAEC,iBACF,IAAMC,EAAU,GAAGjB,EAAMQ,EAAZ,SAAyBP,EAAaE,KAAtC,oBAA8DJ,EACxDqB,MAAMH,GAExBI,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,4BAEhB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GACJ,IAAMU,EAASV,EAAOE,KAAKC,IAAItB,GAC/BT,EAAOuC,mBAAmB,YAAaD,GACvC,IAAME,EAAmB1C,SAASC,cAAc,4BAC1C0C,EAAcD,EAAiBE,UAAYF,EAAiBG,aAAe,GACjFC,OAAOC,SAAS,CACTC,SAAU,SACVC,IAAIN,OAKZP,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SAkB7BtC,EAAQmD,UAAUC,OAAO,a","file":"main.1638ebb40c6dcd5a103c.js","sourcesContent":["import _ from 'lodash'\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport { error } from '@pnotify/core';\r\n\r\nconst loadBtn = document.querySelector('.load-btn')\r\nconst mainUl = document.querySelector('.gallery')\r\nconst API_KEY = '20962496-895dd0bdb01e3709ca8fdfb85';\r\nconst URL = 'https://pixabay.com/api/?image_type=photo&orientation=horizontal&q='\r\n\r\nconst searchParams = {\r\n  search: \"\",\r\n  page: 1,\r\n  perPage: 12\r\n};\r\n\r\n\r\n function search(item) {\r\n  const mainUrl = `${URL}${item}&page=${searchParams.page}&per_page=12&key=${API_KEY}`\r\n  const fetchItem = fetch(mainUrl)\r\n   fetchItem\r\n     .then(response => {\r\n       if (!response.ok) {\r\n       throw new Error('There is some error here')\r\n       }\r\n       return response.json()\r\n     })\r\n     .then(result => {\r\n       const cards = result.hits.map(itemGet).join('')\r\n       mainUl.innerHTML = cards\r\n      })\r\n     .catch(err => console.log(err))\r\n   \r\n   loadBtn.addEventListener('click', function (e) {\r\n   searchParams.page += 1\r\n     e.preventDefault()\r\n     const mainUrl = `${URL}${item}&page=${searchParams.page}&per_page=12&key=${API_KEY}`\r\n     const fetchImage = fetch(mainUrl)\r\n     fetchImage\r\n     .then(response => {\r\n       if (!response.ok) {\r\n       throw new Error('There is some error here')\r\n       }\r\n       return response.json()\r\n     })\r\n     .then(result => {\r\n       const newImg = result.hits.map(itemGet)\r\n       mainUl.insertAdjacentHTML('beforeend', newImg)\r\n       const lastVisiblePhoto = document.querySelector('.gallery-item:last-child')\r\n       const scrollValue = lastVisiblePhoto.offsetTop + lastVisiblePhoto.clientHeight + 20;\r\n       window.scrollTo({\r\n              behavior: 'smooth',\r\n              top:scrollValue\r\n\r\n})\r\n\r\n     })\r\n     .catch(err => console.log(err))\r\n   })\r\n}\r\n\r\nasync function loadMore(item) {\r\n  searchParams.page += 1;\r\n  const mainUrl = `${URL}${item}&page=${searchParams.page}&per_page=12&key=${API_KEY}`\r\n  const fetch = await fetch(mainUrl)\r\n}\r\n\r\nconst form = document.querySelector('.search-form')\r\nconst butnSubm = form.querySelector('[type=\"submit\"]')\r\nconst input = document.querySelector('[name=\"query\"]')\r\nform.addEventListener('submit', function (e) {\r\n  e.preventDefault()\r\n  const inputValue = input.value;\r\n  search(inputValue)\r\n\r\n  loadBtn.classList.remove('hide')\r\n})\r\n\r\nfunction itemGet(item) {\r\n  const { webformatURL, likes, views, comments, downloads } = item;\r\n  const markUp = `<li class=\"gallery-item\"><div class=\"photo-card\">\r\n  <img src=\"${webformatURL}\" alt=\"\" />\r\n\r\n  <div class=\"stats\">\r\n    <p class=\"stats-item\">\r\n      <i class=\"material-icons\">thumb_up</i>\r\n      ${likes}\r\n    </p>\r\n    <p class=\"stats-item\">\r\n      <i class=\"material-icons\">visibility</i>\r\n      ${views}\r\n    </p>\r\n    <p class=\"stats-item\">\r\n      <i class=\"material-icons\">comment</i>\r\n      ${comments}\r\n    </p>\r\n    <p class=\"stats-item\">\r\n      <i class=\"material-icons\">cloud_download</i>\r\n      ${downloads}\r\n    </p>\r\n  </div>\r\n</div>\r\n</li>`\r\n \r\n  return markUp\r\n}\r\n\r\nfunction infiniteScroll() {\r\n  const options = {\r\n    threshold:0.2\r\n  }\r\n  async function observerCallback(entries,observer) {\r\n    const elem = entries[0];\r\n    if (elem.isIntersecting) {\r\n      observer.unobserve(elem.target)\r\n      await loadMore()\r\n      const last = document.querySelector('.gallery-item:last-child')\r\n      observer.observe(last)\r\n    }\r\n    \r\n  }\r\n  const lastVisiblePhoto = document.querySelector('.gallery-item:last-child')\r\n  const observer = new IntersectionObserver(observerCallback, options)\r\n  observer.observe(lastVisiblePhoto)\r\n}"],"sourceRoot":""}